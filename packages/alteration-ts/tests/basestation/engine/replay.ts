import {
  Engine,
  replay,
  timeWindow,
  and,
  target,
  parse,
  AlterationMode,
} from '../../../src'
import { expect } from 'chai'

const initial = parse(
  'MSG,0,30,1105,300065,3839,2018/02/28,16:04:30.987,2018/02/28,16:04:31.888,,,414.1,333,,,64,,,,,\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:31.987,2018/02/28,16:04:32.888,,36025,,,47.33528,4.16787,,,0,0,0,0\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:32.391,2018/02/28,16:04:33.888,,36025,,,47.33606,4.16732,,,0,0,0,0\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:32.590,2018/02/28,16:04:34.888,,,415,333.1,,,0,,,,,\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:33.801,2018/02/28,16:04:35.888,,36025,,,47.33678,4.16678,,,0,0,0,0\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:33.998,2018/02/28,16:04:36.894,,,415,333.1,,,0,,,,,\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:34.404,2018/02/28,16:04:37.894,,36025,,,47.33752,4.16622,,,0,0,0,0\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:34.607,2018/02/28,16:04:38.894,,,415,333.1,,,0,,,,,\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:35.608,2018/02/28,16:04:39.894,,36025,,,47.33821,4.16567,,,0,0,0,0\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:36.017,2018/02/28,16:04:40.889,,,415,333.1,,,0,,,,,\n' +
    'MSG,0,30,1105,300065,3839,2018/02/28,16:04:36.217,2018/02/28,16:04:41.889,,36025,,,47.33926,4.16492,,,0,0,0,0'
)

const source = parse(
  'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:24.656,2018/02/28,16:07:24.905,,,389.8,321.2,,,-896,,,,,\n' +
    'MSG,0,30,2304,440062,3841,2018/02/28,16:07:25.070,2018/02/28,16:07:25.903,,,402.2,121.5,,,-1984,,,,,\n' +
    'MSG,0,30,2304,440062,3841,2018/02/28,16:07:25.467,2018/02/28,16:07:26.903,,17725,,,46.57736,5.72837,,,0,0,0,0\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:26.070,2018/02/28,16:07:26.903,,,389.8,321.2,,,-896,,,,,\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:26.271,2018/02/28,16:07:27.903,,34650,,,47.42942,5.07751,,,0,0,0,0\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:26.671,2018/02/28,16:07:28.903,,,388.4,321.3,,,-896,,,,,\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:27.071,2018/02/28,16:07:28.903,,34650,,,47.42998,5.07688,,,0,0,0,0\n' +
    'MSG,0,30,2304,440062,3841,2018/02/28,16:07:27.076,2018/02/28,16:07:29.906,,,405.2,123.7,,,-2048,,,,,\n' +
    'MSG,0,30,2304,440062,3841,2018/02/28,16:07:27.489,2018/02/28,16:07:29.906,,17700,,,46.57626,5.73067,,,0,0,0,0\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:27.579,2018/02/28,16:07:30.906,,,388.4,321.3,,,-896,,,,,\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:28.489,2018/02/28,16:07:31.906,,34625,,,47.43138,5.07519,,,0,0,0,0\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:28.689,2018/02/28,16:07:33.906,,,388.4,321.3,,,-896,,,,,\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:28.998,2018/02/28,16:07:35.902,,34600,,,47.43333,5.07287,,,0,0,0,0\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:29.106,2018/02/28,16:07:36.902,,,388.4,321.3,,,-896,,,,,\n' +
    'MSG,0,30,2303,406E66,3838,2018/02/28,16:07:39.145,2018/02/28,16:07:37.906,,,388.4,321.3,,,-960,,,,,'
)

//const start_date = 1519833870987;// Initial start_date
const start_date = 1519834044656 // Source start_date
/*
describe("Replay engine", () => {
	it("should replay a recording", () => {
		const expected = parse("MSG,0,30,1105,300065,3839,2018/02/28,16:04:30.987,2018/02/28,16:04:31.888,,,414.1,333,,,64,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:31.987,2018/02/28,16:04:32.888,,36025,,,47.33528,4.16787,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:32.391,2018/02/28,16:04:33.888,,36025,,,47.33606,4.16732,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:32.590,2018/02/28,16:04:34.888,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:32.987,2018/02/28,16:04:33.888,,,389.8,321.2,,,-896,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:33.801,2018/02/28,16:04:35.888,,36025,,,47.33678,4.16678,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:33.998,2018/02/28,16:04:36.894,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:34.401,2018/02/28,16:04:35.886,,,389.8,321.2,,,-896,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:34.404,2018/02/28,16:04:37.894,,36025,,,47.33752,4.16622,,,0,0,0,0\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:34.602,2018/02/28,16:04:36.886,,34650,,,47.42942,5.07751,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:34.607,2018/02/28,16:04:38.894,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:35.002,2018/02/28,16:04:37.886,,,388.4,321.3,,,-896,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:35.402,2018/02/28,16:04:37.886,,34650,,,47.42998,5.07688,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:35.608,2018/02/28,16:04:39.894,,36025,,,47.33821,4.16567,,,0,0,0,0\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:35.910,2018/02/28,16:04:39.889,,,388.4,321.3,,,-896,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:36.017,2018/02/28,16:04:40.889,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:36.217,2018/02/28,16:04:41.889,,36025,,,47.33926,4.16492,,,0,0,0,0");

	 	const actual = replay({
			scope: and(target("406E66"), timeWindow(start_date, start_date + 3000)), 
			source: source,
			offset: 2000,
		}).processing(initial);

		expect(actual.length).to.be.equals(expected.length);
		const replayedMessages = actual.filter((msg) => 
																					 		msg.aircraftID == 2303
																					 && msg.hexIdent == "406E66"
																					 && msg.flightID == 3838);

		// Bon nombre de message 
		expect(replayedMessages).to.have.lengthOf(6);

		// Date du premier message a bien été adaptée
		expect(replayedMessages[0].timestampGenerated).to.be.equals(Date.parse("2018/02/28,16:04:30.987Z") + 2000);
		expect(replayedMessages[0].timestampLogged).to.be.equals(Date.parse("2018/02/28,16:04:31.888Z") + 2000);

		// Comparaison brute
		expect(actual).to.be.deep.equals(expected);
		
	});

	it("should replay a recording with coordinate offset", () => {		
		const expected = parse("MSG,0,30,1105,300065,3839,2018/02/28,16:04:30.987,2018/02/28,16:04:31.888,,,414.1,333,,,64,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:31.987,2018/02/28,16:04:32.888,,36025,,,47.33528,4.16787,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:32.391,2018/02/28,16:04:33.888,,36025,,,47.33606,4.16732,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:32.590,2018/02/28,16:04:34.888,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:32.987,2018/02/28,16:04:33.888,,,389.8,321.2,,,-896,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:33.801,2018/02/28,16:04:35.888,,36025,,,47.33678,4.16678,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:33.998,2018/02/28,16:04:36.894,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:34.401,2018/02/28,16:04:35.886,,,389.8,321.2,,,-896,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:34.404,2018/02/28,16:04:37.894,,36025,,,47.33752,4.16622,,,0,0,0,0\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:34.602,2018/02/28,16:04:36.886,,34650,,,48.02942,4.07751,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:34.607,2018/02/28,16:04:38.894,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:35.002,2018/02/28,16:04:37.886,,,388.4,321.3,,,-896,,,,,\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:35.402,2018/02/28,16:04:37.886,,34650,,,48.02998,4.07688,,,0,0,0,0\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:35.608,2018/02/28,16:04:39.894,,36025,,,47.33821,4.16567,,,0,0,0,0\n" +
                "MSG,0,30,2303,406E66,3838,2018/02/28,16:04:35.910,2018/02/28,16:04:39.889,,,388.4,321.3,,,-896,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:36.017,2018/02/28,16:04:40.889,,,415,333.1,,,0,,,,,\n" +
                "MSG,0,30,1105,300065,3839,2018/02/28,16:04:36.217,2018/02/28,16:04:41.889,,36025,,,47.33926,4.16492,,,0,0,0,0");
	
		expect(start_date).to.be.equals(1519834044656)
		const actual = replay({
			scope: and(target("406E66"), timeWindow(start_date, start_date + 3000)),
			source: source,
			offset: 2000,
			alterations: [
				{ property: "latitude", value: 0.6, mode: AlterationMode.OFFSET },
				{ property: "longitude", value: -1, mode: AlterationMode.OFFSET },
			]}).processing(initial);

		expect(actual.length).to.be.equals(expected.length);
		expect(actual).to.be.deep.equals(expected);
	});


	describe("Using engine manager", () => {
		it("should return the same result with only one action", () => {
			const action = replay({
				scope: and(target("406E66"), timeWindow(start_date, start_date + 3000)), 
				source: source,
				offset: 2000,
			});

			const with_engine = new Engine({
				actions: [action,action],
			}).run(initial).get_recording();

			const without_engine = action.processing(action.processing(initial));

			expect(without_engine).to.be.deep.equals(with_engine);
		})
	});

});

*/
