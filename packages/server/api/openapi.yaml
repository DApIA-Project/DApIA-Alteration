openapi: 3.0.0
info:
  title: ALTERATION SCENARIO API
  version: 2.0.0
servers:
  - url: http://localhost:3001
security:
  - ApiKeyAuth: []
paths:
  /recording/alteration:
    post:
      summary: Alter a record
      description: Alter an existing record in the application
      requestBody:
        description: JSON representation of the record to alter
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scenario:
                  type: string
                  description: The recording's alteration scenario
                  example: 'hide all_planes at 2 seconds'
                recording:
                  type: object
                  $ref: '#/components/schemas/Recording'
                  description: The record to alter containing a file name and content
                recordingToReplay:
                  type: object
                  $ref: '#/components/schemas/Recording'
                  description: The recording to use for alterer recording containing file name and content in case of replay
                optionsAlteration:
                  type: object
                  $ref: '#/components/schemas/OptionsAlteration'
                  description: Options to apply when altering
                outputFormat:
                  type: object
                  $ref: '#/components/schemas/FileFormat'
                  description: Output format for the altered file
              required:
                - scenario
                - recording
                - optionsAlteration
                - outputFormat
      responses:
        200:
          description: Successfully altered record
          content:
            application/json:
              schema:
                type: object
                properties:
                  alteredRecordings:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/Recording'
                    description: Altered records in array form
                  error:
                    type: string
                    nullable: true
                    example: null
        422:
          description: Invalid format or syntax error
          content:
            application/json:
              schema:
                type: object
                properties:
                  alteredRecordings:
                    type: array
                    default: []
                    items:
                      type: object
                      $ref: '#/components/schemas/Recording'
                    maxItems: 0
                    description: Altered records as an empty array
                  error:
                    type: string
                    description: A description of the error (invalid format or invalid syntax)
                    example: 'invalid_format'
  /scenario/create:
    post:
      summary: Create a scenario
      description: Create a scenario in the application
      requestBody:
        description: JSON representation of the scenario to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name given to the scenario
                  example: 'Scenario A'
                text:
                  type: string
                  description: The text of the scenario
                  example: 'hide all_planes at 6 seconds'
                options:
                  type: object
                  $ref: '#/components/schemas/OptionsAlteration'
                  description: Scenario alteration options
                user_id:
                  type: number
                  description: Id of the user who created the scenario
                  example: 1
              required:
                - name
                - text
                - options
                - user_id
      responses:
        200:
          description: Successfully created scenario
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    $ref: '#/components/schemas/Scenario'
                    description: The created scenario
                  error:
                    type: string
                    nullable: true
                    example: null
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [authenticationRequired]
                    example: 'authentication_required'
        422:
          description: UnprocessableContent and BadType
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum:
                      [
                        emptyName,
                        emptyTextScenario,
                        emptyUserId,
                        optionsBadType,
                      ]
                    example: 'empty_name'
  /scenario/update:
    post:
      summary: Update a scenario
      description: Update a scenario in the application
      requestBody:
        description: JSON representation of the scenario to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name given to the scenario
                  example: 'Scenario B'
                text:
                  type: string
                  description: The text of the scenario
                  example: 'hide all_planes at 36 seconds'
                options:
                  type: object
                  $ref: '#/components/schemas/OptionsAlteration'
                  description: Scenario alteration options
                id:
                  type: number
                  description: Id of the scenario to update
                  example: 1
              required:
                - name
                - text
                - options
                - id
      responses:
        200:
          description: Successfully updated scenario
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    $ref: '#/components/schemas/Scenario'
                    description: The updated scenario
                  error:
                    type: string
                    nullable: true
                    example: null
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [authenticationRequired]
                    example: 'authentication_required'
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [scenarioNotFound]
                    example: 'scenario_not_found'
        422:
          description: UnprocessableContent or BadType
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [emptyName, emptyTextScenario, optionsBadType]
                    example: 'empty_name'
  /scenario/delete:
    post:
      summary: Delete a scenario
      description: Delete a scenario in the application
      requestBody:
        description: JSON representation of the scenario to delete
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: Id of the scenario to delete
                  example: 1
              required:
                - id
      responses:
        200:
          description: Successfully deleted scenario
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    nullable: true
                    example: null
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: [scenarioNotFound]
                    example: 'scenario_not_found'
        422:
          description: BadType
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: [idBadType]
                    example: 'id_bad_type'
  /scenario/find:
    post:
      summary: Find a scenario
      description: Find a scenario in the application
      requestBody:
        description: JSON representation of the scenario to find
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: Id of the scenario to find
                  example: 1
              required:
                - id
      responses:
        200:
          description: Successfully found scenario
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: object
                    $ref: '#/components/schemas/Scenario'
                    description: The scenario found
                  error:
                    type: string
                    nullable: true
                    example: null
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenario:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [scenarioNotFound]
                    example: 'scenario_not_found'
  /scenario/list:
    post:
      summary: List all scenarios
      description: List all scenarios in the application
      requestBody:
        description: JSON representation of the scenarios to list
        required: true
        content:
          application/json:
            schema: {}
      responses:
        200:
          description: Successfully listed all scenarios
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarios:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/Scenario'
                    description: The list of all scenarios
                  error:
                    type: string
                    nullable: true
                    example: null
        422:
          description: UnprocessableContent
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarios:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [emptyListScenario]
                    example: 'empty_list_scenario'
  /scenario/user/list:
    post:
      summary: List all scenarios of one user
      description: List all scenarios of one user in the application
      requestBody:
        description: JSON representation of the list of scenarios of one user
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: Id of the user to list scenarios
                  example: 1
                searchBar:
                  type: string
                  description: Filter with searchbar when list the scenarios
                  example: 'cut'
                startDate:
                  type: string
                  description: Filter with start date when list the scenarios
                  example: '2024-12-12 11:34:56'
                startEnd:
                  type: string
                  description: Filter with end date when list the scenarios
                  example: '2024-12-12 11:34:56'
                optionsAlteration:
                  type: object
                  $ref: '#/components/schemas/OptionsAlteration'
                  description: Filter with options alteration when list the scenarios
                sort:
                  type: string
                  description: Filter with type of sort when list the scenarios
                  enum:
                    [
                      noSort,
                      dateDescending,
                      dateAscending,
                      alphabeticalOrder,
                      antialphabeticalOrder,
                    ]
                  example: 'dateDescending'
              required:
                - id
      responses:
        200:
          description: Successfully listed all scenarios filtered of one user
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarios:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/Scenario'
                    description: The list of all scenarios filtered of one user
                  error:
                    type: string
                    nullable: true
                    example: null
        422:
          description: UnprocessableContent
          content:
            application/json:
              schema:
                type: object
                properties:
                  scenarios:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [emptyListScenario]
                    example: 'empty_list_scenario'
  /user/create:
    post:
      summary: Create a user
      description: Create a user in the application
      requestBody:
        description: JSON representation of the user to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: The firstname given to the user
                  example: 'Bob'
                lastname:
                  type: string
                  description: The lastname given to the user
                  example: 'Dupont'
                email:
                  type: string
                  description: The email given to the user
                  example: 'bob.dupont@mail.fr'
                password:
                  type: string
                  description: The password given to the user
                  example: 's3cret!'
              required:
                - firstname
                - lastname
                - email
                - password
      responses:
        200:
          description: Successfully created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    $ref: '#/components/schemas/User'
                    description: The created user
                  error:
                    type: string
                    nullable: true
                    example: null
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [authenticationRequired]
                    example: 'authentication_required'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [emailConflict]
                    example: 'email_already_used'
        422:
          description: UnprocessableContent and BadType
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum:
                      [
                        emptyFirstname,
                        emptyLastname,
                        emptyEmail,
                        emptyPassword,
                        optionsBadType,
                      ]
                    example: 'empty_firstname'
  /user/findByEmail:
    post:
      summary: Find user by email
      description: Find user by email in the application
      requestBody:
        description: JSON representation of the user to find by email
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email given to the user
                  example: 'bob.dupont@mail.fr'
              required:
                - email
      responses:
        200:
          description: Successfully found user by email
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    $ref: '#/components/schemas/User'
                    description: The found user by email
                  error:
                    type: string
                    nullable: true
                    example: null
        422:
          description: UnprocessableContent
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [emptyUserByEmail]
                    example: 'empty_user'
  /user/find:
    post:
      summary: Find user by id
      description: Find user by id in the application
      requestBody:
        description: JSON representation of the user to find by id
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: The id given to the user
                  example: 1
              required:
                - id
      responses:
        200:
          description: Successfully found user by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    $ref: '#/components/schemas/User'
                    description: The found user by id
                  error:
                    type: string
                    nullable: true
                    example: null
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [userNotFound]
                    example: 'user_not_found'
  /user/login:
    post:
      summary: Login user
      description: Login user in the application
      requestBody:
        description: JSON representation of the user to log
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email given to the user
                  example: 'bob.dupont@mail.fr'
                password:
                  type: string
                  description: The password given to the user
                  example: 's3cret!'
              required:
                - email
                - password
      responses:
        200:
          description: Successfully logged user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    $ref: '#/components/schemas/User'
                    description: The logged user
                  error:
                    type: string
                    nullable: true
                    example: null
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [userNotFound]
                    example: 'user_not_found'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [passwordConflict]
                    example: 'password_not_equals'
        422:
          description: UnprocessableContent
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [emptyEmail, emptyPassword]
                    example: 'empty_password'
  /user/update:
    post:
      summary: Update a user
      description: Update a user in the application
      requestBody:
        description: JSON representation of the user to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: Id given to the user
                  example: 1
                firstname:
                  type: string
                  description: The firstname given to the user
                  example: 'Bob'
                lastname:
                  type: string
                  description: The lastname given to the user
                  example: 'Dupont'
                email:
                  type: string
                  description: The email given to the user
                  example: 'bob.dupont@mail.fr'
                password:
                  type: string
                  description: The password given to the user
                  example: 's3cret!'
                isAdmin:
                  type: boolean
                  description: User is or is not an admin
                  example: false
              required:
                - id
                - firstname
                - lastname
                - email
                - password
                - isAdmin
      responses:
        200:
          description: Successfully updated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    $ref: '#/components/schemas/User'
                    description: The updated user
                  error:
                    type: string
                    nullable: true
                    example: null
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [authenticationRequired]
                    example: 'authentication_required'
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [userNotFound]
                    example: 'user_not_found'
        422:
          description: UnprocessableContent and BadType
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum:
                      [
                        emptyFirstname,
                        emptyLastname,
                        emptyEmail,
                        emptyPassword,
                        optionsBadType,
                      ]
                    example: 'empty_firstname'
  /user/delete:
    post:
      summary: Delete a user
      description: Delete a user in the application
      requestBody:
        description: JSON representation of the user to delete
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: Id of the scenario to delete
                  example: 1
                password:
                  type: string
                  description: Password of user
                  example: 's3cret!'
              required:
                - id
                - password
      responses:
        200:
          description: Successfully deleted user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    nullable: true
                    example: null
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: [userNotFound]
                    example: 'user_not_found'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: [passwordConflict]
                    example: 'password_not_equals'
        422:
          description: BadType
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum: [idBadType]
                    example: 'id_bad_type'
  /user/update/password:
    post:
      summary: Update a user password
      description: Update a user password in the application
      requestBody:
        description: JSON representation of the user password to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: Id given to the user
                  example: 1
                password:
                  type: string
                  description: The password given to the user
                  example: 's3cret!'
                newPassword:
                  type: string
                  description: The new password given to the user
                  example: 'news3cret!'
              required:
                - id
                - password
                - newPassword
      responses:
        200:
          description: Successfully updated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: number
                        description: Id of user
                        example: 1
                      password:
                        type: string
                        description: Old password of user
                        example: 's3cret!'
                      newPassword:
                        type: string
                        description: New password of user
                        example: 'news3cret!'
                    description: The updated user password
                  error:
                    type: string
                    nullable: true
                    example: null
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [authenticationRequired]
                    example: 'authentication_required'
        404:
          description: NotFound
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [userNotFound]
                    example: 'user_not_found'
        422:
          description: UnprocessableContent
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
                    nullable: true
                    example: null
                  error:
                    type: string
                    enum: [emptyPassword, emptyNewPassword]
                    example: 'empty_new_password'
components:
  schemas:
    Recording:
      properties:
        name:
          type: string
        content:
          type: string
      type: object
      example:
        name: 'nomFichierValide.sbs'
        content: 'MSG,5,1,4837,A4A445,18147,2016/12/09,09:13:34.120,2016/12/09,09:13:35.077,,7250,,,,,,,0,,0,0'
    OptionsAlteration:
      properties:
        haveLabel:
          type: boolean
        haveRealism:
          type: boolean
        haveNoise:
          type: boolean
        haveDisableLatitude:
          type: boolean
        haveDisableLongitude:
          type: boolean
        haveDisableAltitude:
          type: boolean
      type: object
      example:
        haveLabel: true
        haveRealism: true
        haveNoise: true
        haveDisableLatitude: true
        haveDisableLongitude: true
        haveDisableAltitude: true
    FileFormat:
      type: string
      enum:
        - auto
        - sbs
        - openskyCsv
        - droneCsv
        - json
        - ndjson
    Scenario:
      type: object
      properties:
        name:
          type: string
        text:
          type: string
        options:
          type: object
          $ref: '#/components/schemas/OptionsAlteration'
        id:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 1
        name: 'Scenario A'
        text: 'hide all_planes at 66 seconds'
        options:
          haveLabel: false
          haveRealism: false
          haveNoise: false
          haveDisableLatitude: false
          haveDisableLongitude: false
          haveDisableAltitude: false
        createdAt: '2024-03-19 10:13:29.155000 +00:00'
        updatedAt: '2024-03-19 10:13:29.157000 +00:00'
    User:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        idAdmin:
          type: boolean
        id:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: 1
        firstname: 'Bob'
        lastname: 'Dupont'
        email: 'bob.dupont@mail.fr'
        password: 's3cret!'
        isAdmin: false
        createdAt: '2024-03-19 10:13:29.155000 +00:00'
        updatedAt: '2024-03-19 10:13:29.157000 +00:00'
