package fdit.alteration.core.basestation.engine;

import com.google.common.io.Files;
import fdit.alteration.core.basestation.message.BaseStationMessageFull;
import fdit.alteration.core.engine.EngineManager;
import fdit.alteration.core.incident.Recording;
import fdit.alteration.core.logging.ActionLogger;
import org.junit.Test;

import java.io.File;

import static com.google.common.collect.Lists.newArrayList;
import static com.google.common.io.Files.write;
import static fdit.alteration.core.basestation.BstHelper.*;
import static fdit.alteration.core.engine.EngineParametersHelper.engineParameters;
import static fdit.alteration.core.engine.EngineParametersHelper.label;
import static fdit.alteration.core.engine.SuperActionHelper.superAction;
import static fdit.alteration.core.incident.IncidentHelper.*;
import static java.nio.charset.StandardCharsets.UTF_8;
import static org.junit.Assert.assertEquals;
import static org.powermock.reflect.Whitebox.invokeMethod;

public class BaseStationCutEngineTest {

    @Test
    public void cutAll() throws Exception {
        final File recording = File.createTempFile("recording", ".bst");
        write("MSG,0,3,4216373,405635,4216373,2019/04/19,17:30:00.052,2019/04/19,17:30:00.052,,38000,,,51.2078,7.0869,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,4007F5,4196341,2019/04/19,17:30:00.102,2019/04/19,17:30:00.102,,38000,,,47.7235,7.6864,,,0,0,0,0\n" +
                        "MSG,0,3,4197737,400D69,4197737,2019/04/19,17:30:00.120,2019/04/19,17:30:00.120,,38000,,,49.3943,2.8343,,,0,0,0,0\n" +
                        "MSG,0,3,10610299,A1E67B,10610299,2019/04/19,17:30:00.140,2019/04/19,17:30:00.140,,16625,,,50.4073,8.2464,,,0,0,0,0\n" +
                        "MSG,0,3,3146937,3004B9,3146937,2019/04/19,17:30:00.159,2019/04/19,17:30:00.159,,28575,,,48.8645,4.2382,,,0,0,0,0\n" +
                        "MSG,0,3,3958500,3C66E4,3958500,2019/04/19,17:30:00.160,2019/04/19,17:30:00.160,,21750,,,50.3645,6.473,,,0,0,0,0\n" +
                        "MSG,0,3,5022243,4CA223,5022243,2019/04/19,17:30:00.163,2019/04/19,17:30:00.163,,37000,,,49.8471,7.7982,,,0,0,0,0\n" +
                        "MSG,0,3,4457005,44022D,4457005,2019/04/19,17:30:00.164,2019/04/19,17:30:00.164,,,429.25,105.82,,,0.0,,,,,\n" +
                        "MSG,0,3,4196526,4008AE,4196526,2019/04/19,17:30:00.178,2019/04/19,17:30:00.178,,20350,,,49.3423,7.6086,,,0,0,0,0\n" +
                        "MSG,0,3,5046545,4D0111,5046545,2019/04/19,17:30:00.215,2019/04/19,17:30:00.215,,0.0,,59.06,49.6179,6.1884,,,0,0,0,1\n" +
                        "MSG,0,3,3958149,3C6585,3958149,2019/04/19,17:30:00.216,2019/04/19,17:30:00.216,,29900,,,48.85,8.6014,,,0,0,0,0\n" +
                        "MSG,0,3,4196526,4008AE,4196526,2019/04/19,17:30:00.225,2019/04/19,17:30:00.225,,,343.59,118.13,,,-7.48,,,,,\n" +
                        "MSG,0,3,4224849,407751,4224849,2019/04/19,17:30:00.225,2019/04/19,17:30:00.225,,35000,,,49.4512,7.2606,,,0,0,0,0\n" +
                        "MSG,0,3,4921884,4B1A1C,4921884,2019/04/19,17:30:00.239,2019/04/19,17:30:00.239,,37000,,,49.6684,8.4823,,,0,0,0,0",
                recording, UTF_8);
        final EngineManager engineManager = new EngineManager(
                new Recording(recording, 1555695000052L),
                newArrayList(cut(timeWindow(0, 100000), parameters(bstTarget("ALL")))),
                new ActionLogger());
        final String resultRecording = Files.toString(engineManager.run(), UTF_8);
        assertEquals("", resultRecording.trim());
    }

    @Test
    public void cutPart() throws Exception {
        final File recording = File.createTempFile("recording", ".bst");
        write("MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:00.052,2019/04/19,17:30:00.052,,30000,,,0.1,0.0,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:02.102,2019/04/19,17:30:00.102,,31000,,,1.1,0.1,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:04.120,2019/04/19,17:30:00.120,,32000,,,2.1,0.2,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:06.140,2019/04/19,17:30:00.140,,33000,,,3.1,0.3,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:08.159,2019/04/19,17:30:00.159,,34000,,,4.1,0.4,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:10.160,2019/04/19,17:30:00.160,,35000,,,5.1,0.5,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:12.163,2019/04/19,17:30:00.163,,36000,,,6.1,0.6,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:14.164,2019/04/19,17:30:00.164,,,429.25,105.81,,,0.1,,,,,\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:16.178,2019/04/19,17:30:00.178,,37000,,,7.1,0.7,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:18.215,2019/04/19,17:30:00.215,,0.0,,59.06,8.1,0.8,,,0,0,0,1\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:20.216,2019/04/19,17:30:00.216,,39000,,,9.1,0.9,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:22.225,2019/04/19,17:30:00.225,,,343.59,118.13,,,-7.48,,,,,\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:24.225,2019/04/19,17:30:00.225,,40000,,,10.1,1.0,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:26.239,2019/04/19,17:30:00.239,,41000,,,11.1,1.1,,,0,0,0,0",
                recording, UTF_8);
        final EngineManager engineManager = new EngineManager(new Recording(recording, 1555695000052L),
                newArrayList(cut(timeWindow(10000, 20000), parameters(bstTarget("ALL")))),
                new ActionLogger());
        final String resultRecording = Files.toString(engineManager.run(), UTF_8);
        assertEquals("MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:00.052,2019/04/19,17:30:00.052,,30000,,,0.1,0,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:02.102,2019/04/19,17:30:00.102,,31000,,,1.1,0.1,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:04.120,2019/04/19,17:30:00.120,,32000,,,2.1,0.2,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:06.140,2019/04/19,17:30:00.140,,33000,,,3.1,0.3,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:08.159,2019/04/19,17:30:00.159,,34000,,,4.1,0.4,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:10.216,2019/04/19,17:30:00.216,,35000,,,5.1,0.5,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:12.225,2019/04/19,17:30:00.225,,,343.6,118.1,,,-7,,,,,\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:14.225,2019/04/19,17:30:00.225,,36000,,,6.1,0.6,,,0,0,0,0\n" +
                        "MSG,0,3,4196341,405635,4196341,2019/04/19,17:30:16.239,2019/04/19,17:30:00.239,,37000,,,7.1,0.7,,,0,0,0,0",
                resultRecording.trim());
    }
}